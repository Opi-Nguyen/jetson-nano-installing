import os
import json
import time
import requests
import threading

# ƒê·ªãnh nghƒ©a th√¥ng tin server
DOMAIN_REMOTE = "hec08rwqwte.sn.mynetname.net"
DOMAIN_LAN = "192.168.88.100"
PORT = "8040"

CHECK_UPDATE_API = "/api/v1/check-update"
DEVICE_INFO_PATH = "/home/.device_info"

def run_dummy_function():
    """H√†m gi·∫£ l·∫≠p th·ª±c hi·ªán h√†nh ƒë·ªông khi c√≥ c·∫≠p nh·∫≠t"""
    print("üöÄ Dummy function is running... Update detected!")

def check_server_access(domain):
    """Ki·ªÉm tra xem server c√≥ th·ªÉ truy c·∫≠p ƒë∆∞·ª£c kh√¥ng"""
    url = f"http://{domain}:{PORT}{CHECK_UPDATE_API}"
    try:
        response = requests.get(url, timeout=3)
        return response.status_code == 200
    except requests.exceptions.RequestException:
        return False

def select_server():
    """Ch·ªçn server ph√π h·ª£p d·ª±a v√†o m√¥i tr∆∞·ªùng m·∫°ng"""
    if check_server_access(DOMAIN_REMOTE):
        return f"http://{DOMAIN_REMOTE}"

    if check_server_access(DOMAIN_LAN):
        return f"http://{DOMAIN_LAN}"

    return None

def check_update_loop():
    """G·ªçi API `/check-update` m·ªói 5 gi√¢y"""
    while True:
        server = select_server()
        if not server:
            print("‚ùå Kh√¥ng t√¨m th·∫•y server, th·ª≠ l·∫°i sau 10 gi√¢y...")
            time.sleep(10)
            continue  # Th·ª≠ l·∫°i sau

        url = f"{server}:{PORT}{CHECK_UPDATE_API}"

        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                update_status = response.json().get("update_available", False)
                if update_status:
                    print("‚úÖ Update detected! Running dummy function...")
                    run_dummy_function()
                else:
                    print("üîç No update available.")
            else:
                print(f"‚ö†Ô∏è Server returned status code {response.status_code}")
        except Exception as e:
            print(f"‚ö†Ô∏è Error checking update: {e}")

        time.sleep(5)

if __name__ == "__main__":
    print("üîÑ Starting auto_check_update tool...")
    update_thread = threading.Thread(target=check_update_loop, daemon=True)
    update_thread.start()

    while True:
        time.sleep(1)  # Gi·ªØ ch∆∞∆°ng tr√¨nh ch·∫°y
